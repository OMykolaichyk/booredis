--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -11,7 +11,7 @@
 
 set (booredis_SRCS booredisasync.cpp booredissync.cpp redismessage.cpp booredisdecoder.cpp)
 
-add_library (${PROJECT_LIB} STATIC ${booredis_SRCS})
+add_library (${PROJECT_LIB} SHARED ${booredis_SRCS})
 target_link_libraries(booredis  ${Boost_LIBRARIES})
 
 set_target_properties(${PROJECT_LIB} PROPERTIES
@@ -36,5 +36,5 @@
 install(FILES
         examples/async.cpp
         examples/sync.cpp
-        DESTINATION share/doc/libbooredis/examples
+        DESTINATION "share/doc/lib${PROJECT_NAME_STR}${LIB_MAJOR_VERSION}"
 )
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -85,7 +85,7 @@
 install(FILES
         COPYING
         README
-        DESTINATION "share/doc/lib${PROJECT_NAME_STR}"
+        DESTINATION "share/doc/lib${PROJECT_NAME_STR}${LIB_MAJOR_VERSION}"
 )
 
 ADD_CUSTOM_TARGET(uninstall
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -2,32 +2,7 @@
 
 enable_testing()
 
-INCLUDE(ExternalProject)
-set_directory_properties(PROPERTIES EP_PREFIX ${CMAKE_BINARY_DIR}/ThirdParty)
-
-ExternalProject_Add(
-        googletest
-        PREFIX  ${CMAKE_BINARY_DIR}/googletest
-        SVN_REPOSITORY http://googletest.googlecode.com/svn/trunk/
-        TIMEOUT 10
-        INSTALL_COMMAND ""
-        UPDATE_COMMAND "" #skip svn update
-        LOG_DOWNLOAD ON
-        LOG_CONFIGURE ON
-        LOG_BUILD ON
-    )
-
-ExternalProject_Get_Property(googletest source_dir)
-include_directories(${source_dir}/include)
-
-ExternalProject_Get_Property(googletest binary_dir)
-add_library(gtest UNKNOWN IMPORTED)
-set_property(TARGET gtest PROPERTY IMPORTED_LOCATION ${binary_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gtest.a)
-add_dependencies(gtest googletest)
-
-add_library(gtest_main UNKNOWN IMPORTED)
-set_property(TARGET gtest_main PROPERTY IMPORTED_LOCATION ${binary_dir}/${CMAKE_FIND_LIBRARY_PREFIXES}gtest_main.a)
-add_dependencies(gtest_main googletest)
+add_subdirectory(/usr/src/gtest ${CMAKE_BINARY_DIR}/googletest)
 
 set(PROJECT_TEST_NAME ${PROJECT_NAME_STR}_test)
 
